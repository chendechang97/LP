import os
import shutil


def delete_files_with_suffix(directory, suffix):
    """Delete all files in the directory that end with the specified suffix and return their prefixes."""
    prefixes = set()
    for filename in os.listdir(directory):
        if filename.endswith(suffix):
            prefix = filename[:-len(suffix)]
            file_path = os.path.join(directory, filename)
            os.remove(file_path)
            prefixes.add(prefix)
            print(f"Deleted file: {file_path}")
    return prefixes


def copy_redun_files_to_target(redun_directory, target_directory, suffix_redun, matching_prefixes):
    """Copy files with the redun suffix from the redun directory to the target directory,
    if their prefixes match the given prefixes, without changing the file name."""
    if not os.path.exists(target_directory):
        os.makedirs(target_directory)

    for filename in os.listdir(redun_directory):
        if filename.endswith(suffix_redun):
            prefix = filename[:-len(suffix_redun)]
            if prefix in matching_prefixes:
                source_file = os.path.join(redun_directory, filename)
                target_file = os.path.join(target_directory, filename)

                shutil.copy2(source_file, target_file)
                print(f"Copied file from {source_file} to {target_file}")


def process_files(delete_folder, redun_folder, target_folder):
    """Delete _datatype.arxml files from delete_folder and copy matching _redun_datatype.arxml files to the target_folder."""
    # 删除 _datatype.arxml 文件并获取前缀
    matching_prefixes = delete_files_with_suffix(delete_folder, '_datatype.arxml')

    # 将匹配的 _redun_datatype.arxml 文件从 redun_folder 复制到 target_folder
    copy_redun_files_to_target(redun_folder, target_folder, '_redun_datatype.arxml', matching_prefixes)


# 指定删除文件夹、红文件夹和目标文件夹路径
delete_folder = 'D:/PyCharm/User/pythonProject/test/1'
redun_folder = 'D:/PyCharm/User/pythonProject/test/2'
target_folder = 'D:/PyCharm/User/pythonProject/test/1'

# 执行处理
process_files(delete_folder, redun_folder, target_folder)
