import os
import shutil

def delete_files_with_suffix(directory, suffix):
    """Delete all files in the directory that end with the specified suffix and return their prefixes."""
    prefixes = set()
    for filename in os.listdir(directory):
        if filename.endswith(suffix):
            prefix = filename[:-len(suffix)]
            file_path = os.path.join(directory, filename)
            os.remove(file_path)
            prefixes.add(prefix)
            print(f"Deleted file: {file_path}")
    return prefixes

def copy_matching_redun_files(source_directory, target_directory, suffix_redun, matching_prefixes):
    """Copy files with the redun suffix from the source directory to the target directory,
    if their prefixes match the given prefixes."""
    if not os.path.exists(target_directory):
        os.makedirs(target_directory)
    
    for filename in os.listdir(source_directory):
        if filename.endswith(suffix_redun):
            prefix = filename[:-len(suffix_redun)]
            if prefix in matching_prefixes:
                target_filename = filename.replace(suffix_redun, '_datatype.arxml')
                
                source_file = os.path.join(source_directory, filename)
                target_file = os.path.join(target_directory, target_filename)
                
                shutil.copy2(source_file, target_file)
                print(f"Copied file from {source_file} to {target_file}")

def process_files(source_folder, target_folder):
    """Delete _datatype.arxml files and copy matching _redun_datatype.arxml files to the target folder."""
    # 删除 _datatype.arxml 文件并获取前缀
    matching_prefixes = delete_files_with_suffix(source_folder, '_datatype.arxml')
    
    # 将匹配的 _redun_datatype.arxml 文件复制到目标文件夹
    copy_matching_redun_files(source_folder, target_folder, '_redun_datatype.arxml', matching_prefixes)

# 指定源文件夹和目标文件夹路径
source_folder = 'path/to/source_folder'
target_folder = 'path/to/target_folder'

# 执行处理
process_files(source_folder, target_folder)
